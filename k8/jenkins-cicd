pipeline {
    agent any  // The pipeline can run on any available agent

    tools {
        nodejs 'NodeJS for example'  // The name of NodeJS as configured in Global Tool Configuration
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Checkout the source code from the GitHub repository
                git url: 'https://github.com/kai0246/examples.git', branch: 'main', credentialsId: 'github-token'
            }
        }

        stage('Check npm version') {
            steps {
                // Check the version of npm installed
                sh 'npm -v'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Install dependencies and avoid pipeline failure if there are security warnings
                    sh 'npm install'  // Install the dependencies
                    sh 'npm audit || true'  // Run npm audit but do not fail the pipeline if there are warnings
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run unit tests and other checks, continue even if there are errors
                    try {
                        sh 'npm test'  // Run the tests
                    } catch (Exception e) {
                        echo "Tests failed, but continuing the pipeline."  // Print the error message but do not fail the pipeline
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile in the project
                    try {
                        sh 'docker build -t htimo/examples:latest .'  // Build the Docker image
                    } catch (Exception e) {
                        echo "Docker build failed, but continuing the pipeline."  // Print the error message but do not fail the pipeline
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to the Docker registry
                    try {
                        sh 'docker login -u <docker-username> -p <docker-password>'  // Log in to the Docker registry
                        sh 'docker push htimo/examples:latest'  // Push the Docker image to the registry
                    } catch (Exception e) {
                        echo "Docker push failed, but continuing the pipeline."  // Print the error message but do not fail the pipeline
                    }
                }
            }
        }
    }

    post {
        success {
            // Notify if the pipeline succeeds
            echo 'Pipeline completed successfully.'
        }
        failure {
            // Notify if the pipeline fails
            echo 'Pipeline failed.'
        }
    }
}
